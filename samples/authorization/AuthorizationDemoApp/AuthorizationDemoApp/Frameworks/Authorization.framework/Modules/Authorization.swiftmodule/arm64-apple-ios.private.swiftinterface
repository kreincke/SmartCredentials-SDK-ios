// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Authorization
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import Authorization
import Core
import Foundation
import LocalAuthentication
import Swift
import _Concurrency
import _StringProcessing
public enum UserConfirmationKeys {
  public static let type: Swift.String
}
@_inheritsConvenienceInitializers public class ConfirmationAction : Core.IActionModule {
  required public init(actionId: Swift.String, moduleName: Swift.String, data: [Swift.String : Any])
  override public func execute(with item: Core.ItemEnvelope, completionHandler: @escaping Core.ExecCallCompletionHandler)
  @objc deinit
}
public enum ConfirmationType : Swift.String {
  case osDefault
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public struct SmartCredentialsAuthorizationFactory {
  public static func smartCredentialsAuthorizationAPI(configuration: Core.SmartCredentialsConfiguration) -> Core.AuthorizationAPI
}
extension Authorization.ConfirmationType : Swift.Equatable {}
extension Authorization.ConfirmationType : Swift.Hashable {}
extension Authorization.ConfirmationType : Swift.RawRepresentable {}
